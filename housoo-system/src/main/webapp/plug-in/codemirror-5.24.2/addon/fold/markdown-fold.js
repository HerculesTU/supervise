(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],A)}else{A(CodeMirror)}}})(function(A){A.registerHelper("fold","markdown",function(G,D){var K=100;function C(M){var N=G.getTokenTypeAt(A.Pos(M,0));return N&&/\bheader\b/.test(N)}function B(M,P,O){var N=P&&P.match(/^#+/);if(N&&C(M)){return N[0].length}N=O&&O.match(/^[=\-]+\s*$/);if(N&&C(M+1)){return O[0]=="="?1:2}return K}var L=G.getLine(D.line),E=G.getLine(D.line+1);var J=B(D.line,L,E);if(J===K){return undefined}var H=G.lastLine();var F=D.line,I=G.getLine(F+2);while(F<H){if(B(F+1,E,I)<=J){break}++F;E=I;I=G.getLine(F+2)}return{from:A.Pos(D.line,L.length),to:A.Pos(F,G.getLine(F).length)}})});