(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],A)}else{A(CodeMirror)}}})(function(C){var B=/^(\s*)(>[> ]*|- \[[x ]\]\s|[*+-]\s|(\d+)([.)]))(\s*)/,D=/^(\s*)(>[> ]*|- \[[x ]\]|[*+-]|(\d+)[.)])(\s*)$/,A=/[*+-]\s/;C.commands.newlineAndIndentContinueMarkdownList=function(I){if(I.getOption("disableInput")){return C.Pass}var H=I.listSelections(),J=[];for(var K=0;K<H.length;K++){var M=H[K].head;var Q=I.getStateAfter(M.line);var E=Q.list!==false;var L=Q.quote!==0;var N=I.getLine(M.line),G=B.exec(N);if(!H[K].empty()||(!E&&!L)||!G){I.execCommand("newlineAndIndent");return}if(D.test(N)){if(!/>\s*$/.test(N)){I.replaceRange("",{line:M.line,ch:0},{line:M.line,ch:M.ch+1})}J[K]="\n"}else{var O=G[1],P=G[5];var F=A.test(G[2])||G[2].indexOf(">")>=0?G[2].replace("x"," "):(parseInt(G[3],10)+1)+G[4];J[K]="\n"+O+F+P}}I.replaceSelections(J)}});