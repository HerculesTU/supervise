(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],A)}else{A(CodeMirror)}}})(function(A){A.defineMode("scheme",function(){var E="builtin",V="comment",U="string",L="atom",G="number",T="bracket";var M=2;function S(Z){var Y={},W=Z.split(" ");for(var X=0;X<W.length;++X){Y[W[X]]=true}return Y}var B=S("Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?");var N=S("define let letrec let* lambda");function H(X,W,Y){this.indent=X;this.type=W;this.prev=Y}function J(Y,X,W){Y.indentStack=new H(X,W,Y.indentStack)}function R(W){W.indentStack=W.indentStack.prev}var O=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i);var P=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i);var C=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i);var K=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);function I(W){return W.match(O)}function D(W){return W.match(P)}function F(X,W){if(W===true){X.backUp(1)}return X.match(K)}function Q(W){return W.match(C)}return{startState:function(){return{indentStack:null,indentation:0,mode:false,sExprComment:false}},token:function(e,c){if(c.indentStack==null&&e.sol()){c.indentation=e.indentation()}if(e.eatSpace()){return null}var d=null;switch(c.mode){case"string":var i,f=false;while((i=e.next())!=null){if(i=='"'&&!f){c.mode=false;break}f=!f&&i=="\\"}d=U;break;case"comment":var i,g=false;while((i=e.next())!=null){if(i=="#"&&g){c.mode=false;break}g=(i=="|")}d=V;break;case"s-expr-comment":c.mode=false;if(e.peek()=="("||e.peek()=="["){c.sExprComment=0}else{e.eatWhile(/[^/s]/);d=V;break}default:var b=e.next();if(b=='"'){c.mode="string";d=U}else{if(b=="'"){d=L}else{if(b=="#"){if(e.eat("|")){c.mode="comment";d=V}else{if(e.eat(/[tf]/i)){d=L}else{if(e.eat(";")){c.mode="s-expr-comment";d=V}else{var Z=null,h=false,W=true;if(e.eat(/[ei]/i)){h=true}else{e.backUp(1)}if(e.match(/^#b/i)){Z=I}else{if(e.match(/^#o/i)){Z=D}else{if(e.match(/^#x/i)){Z=Q}else{if(e.match(/^#d/i)){Z=F}else{if(e.match(/^[-+0-9.]/,false)){W=false;Z=F}else{if(!h){e.eat("#")}}}}}}if(Z!=null){if(W&&!h){e.match(/^#[ei]/i)}if(Z(e)){d=G}}}}}}else{if(/^[-+0-9.]/.test(b)&&F(e,true)){d=G}else{if(b==";"){e.skipToEnd();d=V}else{if(b=="("||b=="["){var a="";var Y=e.column(),X;while((X=e.eat(/[^\s\(\[\;\)\]]/))!=null){a+=X}if(a.length>0&&N.propertyIsEnumerable(a)){J(c,Y+M,b)}else{e.eatSpace();if(e.eol()||e.peek()==";"){J(c,Y+1,b)}else{J(c,Y+e.current().length,b)}}e.backUp(e.current().length-1);if(typeof c.sExprComment=="number"){c.sExprComment++}d=T}else{if(b==")"||b=="]"){d=T;if(c.indentStack!=null&&c.indentStack.type==(b==")"?"(":"[")){R(c);if(typeof c.sExprComment=="number"){if(--c.sExprComment==0){d=V;c.sExprComment=false}}}}else{e.eatWhile(/[\w\$_\-!$%&*+\.\/:<=>?@\^~]/);if(B&&B.propertyIsEnumerable(e.current())){d=E}else{d="variable"}}}}}}}}}return(typeof c.sExprComment=="number")?V:d},indent:function(W){if(W.indentStack==null){return W.indentation}return W.indentStack.indent},closeBrackets:{pairs:'()[]{}""'},lineComment:";;"}});A.defineMIME("text/x-scheme","scheme")});