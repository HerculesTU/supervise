(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],A)}else{A(CodeMirror)}}})(function(E){function B(G){return new RegExp("^(("+G.join(")|(")+"))\\b","i")}var C=["package","message","import","syntax","required","optional","repeated","reserved","default","extensions","packed","bool","bytes","double","enum","float","string","int32","int64","uint32","uint64","sint32","sint64","fixed32","fixed64","sfixed32","sfixed64"];var D=B(C);E.registerHelper("hintWords","protobuf",C);var F=new RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");function A(G){if(G.eatSpace()){return null}if(G.match("//")){G.skipToEnd();return"comment"}if(G.match(/^[0-9\.+-]/,false)){if(G.match(/^[+-]?0x[0-9a-fA-F]+/)){return"number"}if(G.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/)){return"number"}if(G.match(/^[+-]?\d+([EeDd][+-]?\d+)?/)){return"number"}}if(G.match(/^"([^"]|(""))*"/)){return"string"}if(G.match(/^'([^']|(''))*'/)){return"string"}if(G.match(D)){return"keyword"}if(G.match(F)){return"variable"}G.next();return null}E.defineMode("protobuf",function(){return{token:A}});E.defineMIME("text/x-protobuf","protobuf")});