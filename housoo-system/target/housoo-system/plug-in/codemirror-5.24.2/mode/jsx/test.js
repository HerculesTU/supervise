(function(){var A=CodeMirror.getMode({indentUnit:2},"jsx");function B(C){test.mode(C,A,Array.prototype.slice.call(arguments,1))}B("selfclose","[keyword var] [def x] [operator =] [bracket&tag <] [tag foo] [bracket&tag />] [operator +] [number 1];");B("openclose","([bracket&tag <][tag foo][bracket&tag >]hello [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])");B("attr","([bracket&tag <][tag foo] [attribute abc]=[string 'value'][bracket&tag >]hello [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])");B("braced_attr","([bracket&tag <][tag foo] [attribute abc]={[number 10]}[bracket&tag >]hello [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])");B("braced_text","([bracket&tag <][tag foo][bracket&tag >]hello {[number 10]} [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])");B("nested_tag","([bracket&tag <][tag foo][bracket&tag ><][tag bar][bracket&tag ></][tag bar][bracket&tag ></][tag foo][bracket&tag >][operator ++])");B("nested_jsx","[keyword return] (","  [bracket&tag <][tag foo][bracket&tag >]","    say {[number 1] [operator +] [bracket&tag <][tag bar] [attribute attr]={[number 10]}[bracket&tag />]}!","  [bracket&tag </][tag foo][bracket&tag >][operator ++]",")");B("preserve_js_context","[variable x] [operator =] [string-2 `quasi${][bracket&tag <][tag foo][bracket&tag />][string-2 }quoted`]");B("line_comment","([bracket&tag <][tag foo] [comment // hello]","   [bracket&tag ></][tag foo][bracket&tag >][operator ++])");B("line_comment_not_in_tag","([bracket&tag <][tag foo][bracket&tag >] // hello","  [bracket&tag </][tag foo][bracket&tag >][operator ++])");B("block_comment","([bracket&tag <][tag foo] [comment /* hello]","[comment    line 2]","[comment    line 3 */] [bracket&tag ></][tag foo][bracket&tag >][operator ++])");B("block_comment_not_in_tag","([bracket&tag <][tag foo][bracket&tag >]/* hello","    line 2","    line 3 */ [bracket&tag </][tag foo][bracket&tag >][operator ++])");B("missing_attr","([bracket&tag <][tag foo] [attribute selected][bracket&tag />][operator ++])");B("indent_js","([bracket&tag <][tag foo][bracket&tag >]","    [bracket&tag <][tag bar] [attribute baz]={[keyword function]() {","        [keyword return] [number 10]","      }}[bracket&tag />]","  [bracket&tag </][tag foo][bracket&tag >])");B("spread","([bracket&tag <][tag foo] [attribute bar]={[meta ...][variable baz] [operator /][number 2]}[bracket&tag />])");B("tag_attribute","([bracket&tag <][tag foo] [attribute bar]=[bracket&tag <][tag foo][bracket&tag />/>][operator ++])")})();