(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"),require("../htmlmixed/htmlmixed"),require("../ruby/ruby"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror","../htmlmixed/htmlmixed","../ruby/ruby"],A)}else{A(CodeMirror)}}})(function(A){A.defineMode("haml",function(D){var G=A.getMode(D,{name:"htmlmixed"});var F=A.getMode(D,"ruby");function C(H){return function(K,J){var I=K.peek();if(I==H&&J.rubyState.tokenize.length==1){K.next();J.tokenize=B;return"closeAttributeTag"}else{return E(K,J)}}}function E(I,H){if(I.match("-#")){I.skipToEnd();return"comment"}return F.token(I,H.rubyState)}function B(J,I){var H=J.peek();if(I.previousToken.style=="comment"){if(I.indented>I.previousToken.indented){J.skipToEnd();return"commentLine"}}if(I.startOfLine){if(H=="!"&&J.match("!!")){J.skipToEnd();return"tag"}else{if(J.match(/^%[\w:#\.]+=/)){I.tokenize=E;return"hamlTag"}else{if(J.match(/^%[\w:]+/)){return"hamlTag"}else{if(H=="/"){J.skipToEnd();return"comment"}}}}}if(I.startOfLine||I.previousToken.style=="hamlTag"){if(H=="#"||H=="."){J.match(/[\w-#\.]*/);return"hamlAttribute"}}if(I.startOfLine&&!J.match("-->",false)&&(H=="="||H=="-")){I.tokenize=E;return I.tokenize(J,I)}if(I.previousToken.style=="hamlTag"||I.previousToken.style=="closeAttributeTag"||I.previousToken.style=="hamlAttribute"){if(H=="("){I.tokenize=C(")");return I.tokenize(J,I)}else{if(H=="{"){if(!J.match(/^\{%.*/)){I.tokenize=C("}");return I.tokenize(J,I)}}}}return G.token(J,I.htmlState)}return{startState:function(){var I=A.startState(G);var H=A.startState(F);return{htmlState:I,rubyState:H,indented:0,previousToken:{style:null,indented:0},tokenize:B}},copyState:function(H){return{htmlState:A.copyState(G,H.htmlState),rubyState:A.copyState(F,H.rubyState),indented:H.indented,previousToken:H.previousToken,tokenize:H.tokenize}},token:function(K,J){if(K.sol()){J.indented=K.indentation();J.startOfLine=true}if(K.eatSpace()){return null}var H=J.tokenize(K,J);J.startOfLine=false;if(H&&H!="commentLine"){J.previousToken={style:H,indented:J.indented}}if(K.eol()&&J.tokenize==E){K.backUp(1);var I=K.peek();K.next();if(I&&I!=","){J.tokenize=B}}if(H=="hamlTag"){H="tag"}else{if(H=="commentLine"){H="comment"}else{if(H=="hamlAttribute"){H="attribute"}else{if(H=="closeAttributeTag"){H=null}}}}return H}}},"htmlmixed","ruby");A.defineMIME("text/x-haml","haml")});