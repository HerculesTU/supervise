(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"),require("../haskell/haskell"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror","../haskell/haskell"],A)}else{A(CodeMirror)}}})(function(A){A.defineMode("haskell-literate",function(D,C){var B=A.getMode(D,(C&&C.base)||"haskell");return{startState:function(){return{inCode:false,baseState:A.startState(B)}},token:function(F,E){if(F.sol()){if(E.inCode=F.eat(">")){return"meta"}}if(E.inCode){return B.token(F,E.baseState)}else{F.skipToEnd();return"comment"}},innerMode:function(E){return E.inCode?{state:E.baseState,mode:B}:null}}},"haskell");A.defineMIME("text/x-literate-haskell","haskell-literate")});