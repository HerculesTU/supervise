(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"),require("../fold/xml-fold"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror","../fold/xml-fold"],A)}else{A(CodeMirror)}}})(function(C){C.defineOption("matchTags",false,function(G,F,E){if(E&&E!=C.Init){G.off("cursorActivity",B);G.off("viewportChange",D);A(G)}if(F){G.state.matchBothTags=typeof F=="object"&&F.bothTags;G.on("cursorActivity",B);G.on("viewportChange",D);B(G)}});function A(E){if(E.state.tagHit){E.state.tagHit.clear()}if(E.state.tagOther){E.state.tagOther.clear()}E.state.tagHit=E.state.tagOther=null}function B(E){E.state.failedTagMatch=false;E.operation(function(){A(E);if(E.somethingSelected()){return}var F=E.getCursor(),I=E.getViewport();I.from=Math.min(I.from,F.line);I.to=Math.max(F.line+1,I.to);var G=C.findMatchingTag(E,F,I);if(!G){return}if(E.state.matchBothTags){var H=G.at=="open"?G.open:G.close;if(H){E.state.tagHit=E.markText(H.from,H.to,{className:"CodeMirror-matchingtag"})}}var J=G.at=="close"?G.open:G.close;if(J){E.state.tagOther=E.markText(J.from,J.to,{className:"CodeMirror-matchingtag"})}else{E.state.failedTagMatch=true}})}function D(E){if(E.state.failedTagMatch){B(E)}}C.commands.toMatchingTag=function(F){var E=C.findMatchingTag(F,F.getCursor());if(E){var G=E.at=="close"?E.open:E.close;if(G){F.extendSelection(G.to,G.from)}}}});